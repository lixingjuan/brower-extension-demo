{"version":3,"file":"main.9b5be0caa55d7fd7c467.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAHA;;AAMA;AAAA;;AACA;AAEA;AAIA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAqBA;;AAlDA;;AAAA;AAoDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AACA;AAGA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAnBA;AAsBA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AAFA;AAMA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAHA;AAWA;AACA;AAzBA;AA4BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAGA;AAIA;AACA;AACA;AAGA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AAEA;;;AAEA;AAAA;;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AANA;;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA","sources":["/Users/lixingjuan/Documents/Codes/my/happy-request/src/App.tsx","/Users/lixingjuan/Documents/Codes/my/happy-request/src/components/Editor/editor.js","/Users/lixingjuan/Documents/Codes/my/happy-request/src/components/Editor/index.tsx","/Users/lixingjuan/Documents/Codes/my/happy-request/webpack/runtime/getFullHash"],"sourcesContent":["import \"./App.css\";\nimport { Tabs, message } from \"antd\";\nimport { useState, useCallback } from \"react\";\n\nimport Buttons from \"./components/Buttons\";\nimport Editor from \"./components/Editor\";\nimport DataList from \"./components/Table\";\nimport I18nTransform from \"./components/I18nTransform\";\n\nimport { getAllApi } from \"./service\";\n\nconst { TabPane } = Tabs;\n\nconst defaultActiveKey = localStorage.getItem(\"activeTab\") || \"1\";\n\nconst style = {\n  height: \"100vh\",\n  margin: \"0px auto\",\n  width: \"calc(100vw - 40px)\",\n};\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState(defaultActiveKey);\n\n  const [dataSource, setDataSource] = useState<\n    { url: string; filePath: string }[]\n  >([]);\n\n  /** update data */\n  const handleUpdate = useCallback(() => {\n    getAllApi()\n      .then(({ data, code }) => {\n        message.success(\"query successful\");\n        const dataArr = Object.entries(data)\n          .reverse()\n          .map(([url, filePath = \"\"]) => ({\n            url,\n            filePath: filePath.split(\"my\")?.[1],\n          }));\n        setDataSource(dataArr);\n      })\n      .catch((err) => message.error(\"error\", err.message));\n  }, []);\n\n  const onChange = (val: string) => {\n    setActiveTab(val);\n    localStorage.setItem(\"activeTab\", val);\n  };\n\n  return (\n    <div className=\"App\">\n      <Tabs\n        style={style}\n        onChange={onChange}\n        activeKey={activeTab}\n        defaultActiveKey={defaultActiveKey}\n        tabBarExtraContent={<Buttons onUpdate={handleUpdate} />}\n      >\n        <TabPane tab=\"编辑器\" key=\"1\">\n          <div id=\"container\" className=\"container\"></div>\n          <Editor />\n        </TabPane>\n        <TabPane tab=\"本地数据\" key=\"2\">\n          <DataList onUpdate={handleUpdate} dataSource={dataSource} />\n        </TabPane>\n        <TabPane tab=\"国际化\" key=\"3\">\n          <I18nTransform />\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default App;\n","export function initEditor() {\n  const editor = window.monaco.editor.create(\n    document.getElementById(\"container\"),\n    {\n      value: result.config_for_shown || window.DEFAULT_DATA,\n      language: \"json\",\n\n      minimap: {\n        enabled: false,\n      },\n      fontFamily: \"Fira Code, monospace\",\n      fontSize: 13,\n      fontLigatures: true,\n\n      contextmenu: false,\n      scrollBeyondLastLine: false,\n      folding: true,\n      showFoldingControls: \"always\",\n\n      useTabStops: true,\n      wordBasedSuggestions: true,\n      quickSuggestions: true,\n      suggestOnTriggerCharacters: true,\n    }\n  );\n  window.editor = editor;\n}\n\nchrome.storage.sync.get(\"config_for_shown\", (result) => {\n  window.require([\"vs/editor/editor.main\"], () => {\n    function setStorage() {\n      const data = editor.getValue();\n      const config = window\n        .stripJsonComments(data)\n        .replace(/\\s+/g, \"\")\n        .replace(window.cleanJSONReg, ($0, $1, $2) => $2);\n      try {\n        console.log(\"=========data\");\n        console.log(data);\n        console.log(\"=========config\");\n        console.log(config);\n      } catch (e) {\n        console.error(e);\n      }\n\n      chrome.storage.sync.set(\n        {\n          config_for_shown: data,\n          config,\n        },\n        () => {}\n      );\n    }\n\n    setStorage();\n\n    window.monaco.languages.registerCompletionItemProvider(\"json\", {\n      provideCompletionItems: () => {\n        const textArr = [];\n        chrome.extension.getBackgroundPage().urls.forEach((item) => {\n          if (item) {\n            textArr.push({\n              label: item,\n              kind: window.monaco.languages.CompletionItemKind.Text,\n            });\n          }\n        });\n\n        const extraItems = [\n          {\n            label: \"rule\",\n            kind: window.monaco.languages.CompletionItemKind.Method,\n            insertText: {\n              value: `[\n  \"\\${1:from}\",\n  \"\\${1:to}\"\n]\\${0}`,\n            },\n          },\n        ];\n        return [...textArr, ...extraItems];\n      },\n    });\n\n    editor.onDidChangeModelContent(() => {\n      setStorage();\n    });\n  });\n});\n\nfunction preventSave() {\n  document.addEventListener(\n    \"keydown\",\n    (e) => {\n      if (\n        e.keyCode === 83 &&\n        (navigator.platform.match(\"Mac\") ? e.metaKey : e.ctrlKey)\n      ) {\n        e.preventDefault();\n      }\n    },\n    false\n  );\n}\n\npreventSave();\n","import { useEffect } from \"react\";\nimport \"lib/monaco-editor/min/vs\";\n\nimport { initEditor } from \"./editor.js\";\n\nconst Editor = () => {\n  useEffect(() => {\n    initEditor();\n  }, []);\n\n  return <div id=\"container\" className=\"container\"></div>;\n};\n\nexport default Editor;\n","__webpack_require__.h = () => (\"1c41c11b52ff7798fe93\")"],"names":[],"sourceRoot":""}