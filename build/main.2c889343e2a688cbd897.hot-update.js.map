{"version":3,"file":"main.2c889343e2a688cbd897.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAHA;;AAMA;AAAA;;AACA;AAEA;AAIA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAoBA;;AAjDA;;AAAA;AAmDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA","sources":["/Users/lixingjuan/Documents/Codes/my/happy-request/src/App.tsx","/Users/lixingjuan/Documents/Codes/my/happy-request/webpack/runtime/getFullHash"],"sourcesContent":["import \"./App.css\";\nimport { Tabs, message } from \"antd\";\nimport { useState, useCallback } from \"react\";\n\nimport Buttons from \"./components/Buttons\";\nimport Editor from \"./components/Editor\";\nimport DataList from \"./components/Table\";\nimport I18nTransform from \"./components/I18nTransform\";\n\nimport { getAllApi } from \"./service\";\n\nconst { TabPane } = Tabs;\n\nconst defaultActiveKey = localStorage.getItem(\"activeTab\") || \"1\";\n\nconst style = {\n  height: \"100vh\",\n  margin: \"0px auto\",\n  width: \"calc(100vw - 40px)\",\n};\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState(defaultActiveKey);\n\n  const [dataSource, setDataSource] = useState<\n    { url: string; filePath: string }[]\n  >([]);\n\n  /** update data */\n  const handleUpdate = useCallback(() => {\n    getAllApi()\n      .then(({ data, code }) => {\n        message.success(\"query successful\");\n        const dataArr = Object.entries(data)\n          .reverse()\n          .map(([url, filePath = \"\"]) => ({\n            url,\n            filePath: filePath.split(\"my\")?.[1],\n          }));\n        setDataSource(dataArr);\n      })\n      .catch((err) => message.error(\"error\", err.message));\n  }, []);\n\n  const onChange = (val: string) => {\n    setActiveTab(val);\n    localStorage.setItem(\"activeTab\", val);\n  };\n\n  return (\n    <div className=\"App\">\n      <Tabs\n        style={style}\n        onChange={onChange}\n        activeKey={activeTab}\n        defaultActiveKey={defaultActiveKey}\n        tabBarExtraContent={<Buttons onUpdate={handleUpdate} />}\n      >\n        <TabPane tab=\"编辑器\" key=\"1\">\n          <Editor />\n        </TabPane>\n        <TabPane tab=\"本地数据\" key=\"2\">\n          <DataList onUpdate={handleUpdate} dataSource={dataSource} />\n        </TabPane>\n        <TabPane tab=\"国际化\" key=\"3\">\n          <I18nTransform />\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default App;\n","__webpack_require__.h = () => (\"bafef0ade0523c66d37a\")"],"names":[],"sourceRoot":""}